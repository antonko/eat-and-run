# AUTOGENERATED FROM 'queries/get_meals_by_date_range.edgeql' WITH:
#     $ gel-py --dsn gel://test:test@localhost:5656/main --tls-security insecure


from __future__ import annotations
import dataclasses
import datetime
import gel
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class GetMealsByDateRangeResult(NoPydanticValidation):
    id: uuid.UUID
    name: str
    calories: int
    proteins: float
    fats: float
    carbs: float
    date: datetime.datetime


async def get_meals_by_date_range(
    executor: gel.AsyncIOExecutor,
    *,
    start_date: datetime.datetime,
    end_date: datetime.datetime,
) -> list[GetMealsByDateRangeResult]:
    return await executor.query(
        """\
        select Meal {
            name,
            calories,
            proteins,
            fats,
            carbs,
            date
        }
        filter .date >= <datetime>$start_date
        and .date <= <datetime>$end_date
        order by .date;\
        """,
        start_date=start_date,
        end_date=end_date,
    )
